legend(8,250, hospi[,1], cex=0.7)
barplot(mat_hospi, las=2, beside= T, col= rainbow(n_row))
n_row
hospi[,1]
# hospi[,1]
legend(8,250, hospi[,1], cex=0.7)
# hospi[,1]
legend(20,250, hospi[,1], cex=0.7)
# hospi[,1]
legend(50,250, hospi[,1], cex=0.7)
# hospi[,1]
legend("righttop", hospi[,1], cex=0.7)
barplot(mat_hospi, las=2, beside= T, col= rainbow(n_row))
# n_row
# hospi[,1]
legend("righttop", hospi[,1], cex=0.7)
# n_row
# hospi[,1]
legend("topright", hospi[,1], cex=0.7)
n_row
# n_row
# hospi[,1]
legend("topright", hospi[,1], cex=0.7 ,fill= rainbox(n_row))
# n_row
# hospi[,1]
legend("topright", hospi[,1], cex=0.7 ,fill= rainbow(n_row))
abline(h=seq(0,350,10), lty=3, lwd= 0.2)
# n_row
# hospi[,1]
legend("topright", hospi[,1], cex=0.7 ,fill= rainbow(n_row))
abline(h=seq(0,350,10), lty=3, lwd= 0.2)
barplot(mat_hospi, las=2, beside= T, col= rainbow(n_row))
barplot(mat_hospi, las=2, beside= T, col= rainbow(n_row))
abline(h=seq(0,350,10), lty=3, lwd= 0.2)
# n_row
# hospi[,1]
legend("topright", hospi[,1], cex=0.7 ,fill= rainbow(n_row))
library(plotrix)
## 그래프 물결표시.
install.packages("plotrix")
plot(3:10, main = "Axis break test")
# put a break at the default axis and position
axis.break()
axis.break(2, 2.9, style = "zigzag")
library(plotrix)
plot(3:10, main = "Axis break test")
# put a break at the default axis and position
axis.break()
axis.break(2, 2.9, style = "zigzag")
axis.break(2, 8, style = "zigzag")
twogrp <- c(rnorm(10) + 4, rnorm(10) + 20)
gap.plot(twogrp,gap = c(8,16), xlab = "Index", ylab = "Group values",
main = "Two separated groups with gap axis break",
col = c(rep(2, 10), rep(3, 10)), ytics = c(3, 5, 18, 20))
legend(12, 6, c("Low group", "High group"), pch = 1, col = 2:3)
twogrp<-c(rnorm(5)+4,rnorm(5)+20,rnorm(5)+5,rnorm(5)+22)
gpcol<-c(2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5)
gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",
main="Gap on Y axis",col=gpcol)
gap.plot(twogrp,rnorm(20),gap=c(8,16),gap.axis="x",xlab="X values",
xtics=c(4,7,17,20),ylab="Y values",main="Gap on X axis with added lines")
gap.plot(c(seq(3.5,7.5,by=0.5),seq(16.5,22.5,by=0.5)),
rnorm(22),gap=c(8,16),gap.axis="x",type="l",add=TRUE,col=2,)
gap.plot(twogrp,gap=c(8,16,25,35),
xlab="X values",ylab="Y values",xlim=c(1,30),ylim=c(0,42),
main="Test two gap plot with the lot",xtics=seq(0,30,by=5),
ytics=c(4,6,18,20,22,38,40,42),
lty=c(rep(1,10),rep(2,10)),
pch=c(rep(2,10),rep(3,10)),
col=c(rep(2,10),rep(3,10)),
type="b")
??gap.plot
library(ggplot2)
dput (dat)
#Function to transform data to y positions
trans <- function(x){pmin(x,40) + 0.05*pmax(x-40,0)}
yticks <- c(0, 20, 40, 500, 1000, 1500, 2000)
#Transform the data onto the display scale
dat$mean_t <- trans(dat$mean)
dat$sd_up_t <- trans(dat$mean + dat$sd)
dat$sd_low_t <- pmax(trans(dat$mean - dat$sd),1) #
data=data.frame(CAx=120,CAp=32,CTAx=12,CTAp=4,MTAX=6,MTSAx=3)
lower=c(0,55)
upper=c(95,140)
y_outer=21
lowspan=c(0,11)
topspan=c(lowspan[2]+1,21)
ylabel="y-axis value"
xlabel="x-axis value"
legendtext=c('C-Ax','C-Ap','CT-Ax','CT-Ap','MT-AX','MTS-Ax')
plot(c(0,1),c(0,y_outer),type='n',axes=FALSE,ylab=ylabel,xlab='',lwd=7)
subplot({
y <- as.matrix(data)
bp <- barplot(y,col=heat.colors(2),ylim=lower,xpd=FALSE,las=3)
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 0, 1))
},x=c(0,1),y=lowspan)
subplot({
bp <- barplot(y, col=heat.colors(2), ylim=upper, xpd=FALSE,
names.arg=vector(mode="character",length=length(data)))
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 1, 0))
}, x=c(0,1), y=topspan)
??subplot
library(Hmisc)
plot(c(0,1),c(0,y_outer),type='n',axes=FALSE,ylab=ylabel,xlab='',lwd=7)
subplot({
y <- as.matrix(data)
bp <- barplot(y,col=heat.colors(2),ylim=lower,xpd=FALSE,las=3)
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 0, 1))
},x=c(0,1),y=lowspan)
subplot({
bp <- barplot(y, col=heat.colors(2), ylim=upper, xpd=FALSE,
names.arg=vector(mode="character",length=length(data)))
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 1, 0))
}, x=c(0,1), y=topspan)
twogrp<-c(rnorm(5)+4,rnorm(5)+20,rnorm(5)+5,rnorm(5)+22)
gpcol<-c(2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5)
gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",
main="Gap on Y axis",col=gpcol)
gap.plot(twogrp,rnorm(20),gap=c(8,16),gap.axis="x",xlab="X values",
xtics=c(4,7,17,20),ylab="Y values",main="Gap on X axis with added lines")
gap.plot(c(seq(3.5,7.5,by=0.5),seq(16.5,22.5,by=0.5)),
rnorm(22),gap=c(8,16),gap.axis="x",type="l",add=TRUE,col=2,)
gap.plot(twogrp,gap=c(8,16,25,35),
xlab="X values",ylab="Y values",xlim=c(1,30),ylim=c(0,42),
main="Test two gap plot with the lot",xtics=seq(0,30,by=5),
ytics=c(4,6,18,20,22,38,40,42),
lty=c(rep(1,10),rep(2,10)),
pch=c(rep(2,10),rep(3,10)),
col=c(rep(2,10),rep(3,10)),
type="b")
gap.plot(21:30,rnorm(10)+40,gap=c(8,16,25,35),add=TRUE,
lty=rep(3,10),col=rep(4,10),type="l")
plot(3:10, main = "Axis break test")
# put a break at the default axis and position
axis.break()
axis.break(2, 8, style = "zigzag")
twogrp <- c(rnorm(10) + 4, rnorm(10) + 20)
gap.plot(twogrp,gap = c(8,16), xlab = "Index", ylab = "Group values",
main = "Two separated groups with gap axis break",
col = c(rep(2, 10), rep(3, 10)), ytics = c(3, 5, 18, 20))
gap.plot(twogrp,gap = c(8,16), xlab = "Index", ylab = "Group values",
main = "Two separated groups with gap axis break",
col = c(rep(2, 10), rep(3, 10)), ytics = c(3, 5, 18, 20))
legend(12, 6, c("Low group", "High group"), pch = 1, col = 2:3)
axis.break(2, 8, style = "zigzag")
plot(3:10, main = "Axis break test")
# put a break at the default axis and position
# axis.break()
# axis.break(2, 8, style = "zigzag")
twogrp <- c(rnorm(10) + 4, rnorm(10) + 20)
gap.plot(twogrp,gap = c(8,16), xlab = "Index", ylab = "Group values",
main = "Two separated groups with gap axis break",
col = c(rep(2, 10), rep(3, 10)), ytics = c(3, 5, 18, 20))
legend(12, 6, c("Low group", "High group"), pch = 1, col = 2:3)
twogrp<-c(rnorm(5)+4,rnorm(5)+20,rnorm(5)+5,rnorm(5)+22)
gpcol<-c(2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5)
gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",
main="Gap on Y axis",col=gpcol)
gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",
main="Gap on Y axis",col=gpcol)
gpcol<-c(2,2,2,2,2,3,3,3,3,3,4,4,4,4,4,5,5,5,5,5)
gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",
main="Gap on Y axis",col=gpcol)
gap.plot(twogrp,rnorm(20),gap=c(8,16),gap.axis="x",xlab="X values",
xtics=c(4,7,17,20),ylab="Y values",main="Gap on X axis with added lines")
gap.plot(twogrp,gap=c(8,16),xlab="Index",ylab="Group values",
main="Gap on Y axis",col=gpcol)
gap.plot(twogrp,rnorm(20),gap=c(8,16),gap.axis="x",xlab="X values",
xtics=c(4,7,17,20),ylab="Y values",main="Gap on X axis with added lines")
gap.plot(c(seq(3.5,7.5,by=0.5),seq(16.5,22.5,by=0.5)),
rnorm(22),gap=c(8,16),gap.axis="x",type="l",add=TRUE,col=2,)
gap.plot(twogrp,gap=c(8,16,25,35),
xlab="X values",ylab="Y values",xlim=c(1,30),ylim=c(0,42),
main="Test two gap plot with the lot",xtics=seq(0,30,by=5),
ytics=c(4,6,18,20,22,38,40,42),
lty=c(rep(1,10),rep(2,10)),
pch=c(rep(2,10),rep(3,10)),
col=c(rep(2,10),rep(3,10)),
type="b")
gap.plot(21:30,rnorm(10)+40,gap=c(8,16,25,35),add=TRUE,
lty=rep(3,10),col=rep(4,10),type="l")
library(Hmisc) #subplot
data=data.frame(CAx=120,CAp=32,CTAx=12,CTAp=4,MTAX=6,MTSAx=3)
lower=c(0,55)
upper=c(95,140)
y_outer=21
lowspan=c(0,11)
topspan=c(lowspan[2]+1,21)
ylabel="y-axis value"
xlabel="x-axis value"
legendtext=c('C-Ax','C-Ap','CT-Ax','CT-Ap','MT-AX','MTS-Ax')
plot(c(0,1),c(0,y_outer),type='n',axes=FALSE,ylab=ylabel,xlab='',lwd=7)
subplot({
y <- as.matrix(data)
bp <- barplot(y,col=heat.colors(2),ylim=lower,xpd=FALSE,las=3)
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 0, 1))
},x=c(0,1),y=lowspan)
subplot({
bp <- barplot(y, col=heat.colors(2), ylim=upper, xpd=FALSE,
names.arg=vector(mode="character",length=length(data)))
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 1, 0))
}, x=c(0,1), y=topspan)
plot(c(0,1),c(0,y_outer),type='n',axes=FALSE,ylab=ylabel,xlab='',lwd=7)
subplot({
y <- as.matrix(data)
bp <- barplot(y,col=heat.colors(2),ylim=lower,xpd=FALSE,las=3)
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 0, 1))
},x=c(0,1),y=lowspan)
subplot({
bp <- barplot(y, col=heat.colors(2), ylim=upper, xpd=FALSE,
names.arg=vector(mode="character",length=length(data)))
arrows(bp, y * .95, bp, y * 1.05, xpd = NA, angle = 90, code = 3,
length = .1, col = ifelse(y > max(lower), 1, 0))
}, x=c(0,1), y=topspan)
pie(p1,radius=1,init.angle=90)
par(mfrow=c(1,1),oma=c(0.5,0.5,0.1,0.1))
p1 <- c(10,20,30,40)
pie(p1,radius=1)
pie(p1,radius=1,init.angle=90)
pie(p1,radius=1)
pie(p1,radius=1,init.angle=90)
p1 <- c(10,20,30,40,50,60)
pie(p1,radius=1,edges=20)
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=c("Week 1" ,"Week 2" , "Week 3" ,"Week 4"))
pct <- round(p1/sum(p1) * 100,1)
lab <- paste(pct," %")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=lab)
legend(1,1.1,c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5,fill=rainbow(length(p1)))
legend("topright",c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5,fill=rainbow(length(p1)))
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),
label=lab)
legend("topright",c("Week 1","Week 2","Week 3","Week 4"),
cex=0.5,fill=rainbow(length(p1)))
pct <- round(p1/sum(p1) * 100,1)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1,"\n",pct," %")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
pct <- round(p1/sum(p1) * 100,1)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1,"\n\n",pct," %")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
pct <- round(p1/sum(p1) * 150,1)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1,"\n\n",pct," %")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
pct <- round(p1/sum(p1) * 100,2)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1,"\n\n",pct," %")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
pct <- round(p1/sum(p1) * 100,1)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1,"\n\n",pct," %")
pie(p1,radius=0.7,init.angle=90,col=rainbow(length(p1)),label=lab2)
pct <- round(p1/sum(p1) * 100,1)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1,"\t",pct," %")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
pct <- round(p1/sum(p1) * 100,1)
lab1 <- c("Week 1","Week 2","Week 3","Week 4")
lab2 <- paste(lab1,"\t",pct,"%")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
pct <- round(p1/sum(p1) * 100,1)
lab1 <- c("Week1","Week2","Week3","Week4")
lab2 <- paste(lab1,"\t",pct,"%")
pie(p1,radius=1,init.angle=90,col=rainbow(length(p1)),label=lab2)
v1 <- c(10,12,15,11,20)
v2 <- c(5,7,15,8,9)
v3 <- c(11,20,15,18,13)
boxplot(v1,v2,v3,col=c("blue","yellow","pink"),
names=c("Blue","Yellow","Pink"),
horizontal=T)
x <- round(rnorm(30),2)
y <- round(rnorm(30),2)
var1 <- abs(round(rnorm(30),2))
var2 <- abs(round(rnorm(30),2))
var3 <- round(runif(30),2)
var4 <- round(runif(30),2)
var5 <- round(runif(30),2)
par(mfrow=c(2,3))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
par(mfrow=c(2,3))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 정사각형")
symbols(x,y,rectangles=cbind(abs(x),abs(y)),inches=0.2,bg=1:30)
title(main="symbols 함수 - 직사각형")
symbols(x,y,stars=cbind(abs(x),abs(y),var1,var2,var3),inches=0.2,bg=1:30)
title(main="symbols 함수 - 스타형")
symbols(x,y,thermometers=cbind(abs(x),abs(y),var4),inches=0.2,bg=1:30)
title(main="symbols 함수 - thermometer형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.2,bg=1:30)
title(main="symbols 함수 - boxplot형")
x
par(mfrow=c(1,1))
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.2,bg=1:30)
title(main="symbols 함수 - boxplot형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.5,bg=1:30)
title(main="symbols 함수 - boxplot형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.5,bg=1:20)
title(main="symbols 함수 - boxplot형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.5,bg=1:10)
title(main="symbols 함수 - boxplot형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.5,bg=1:5)
title(main="symbols 함수 - boxplot형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.5,bg=1:1)
title(main="symbols 함수 - boxplot형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.5,bg=1:30)
title(main="symbols 함수 - boxplot형")
###### boxplot
??boxplot
#####
apropos("^geom*_")
getwd()
setwd("data2nd/seoul_hospital.csv")
getwd()
dat <- read.csv("data2nd/seoul_hospital.csv")
dat
korean <- read.csv("data2nd/seoul_hospital.csv")
korean
p <- ggplot(korean,aes(x=이름,y=점수)) + geom_point( )
p
korean <- read.csv("data2nd/korean.csv")
korean
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_point( )
p
p <- ggplot(korean,aes(x=이름,y=점수1), las=2) + geom_point( )
p
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_point( )
p
+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_point( )
# + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_line( )
# + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_point( )
# + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_point( )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_line( )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_point( )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
ggplot(korean,aes(factor(Month),MeanTemp)) +
geom_boxplot(aes(fill=factor(Month)))
ggplot(korean,aes(factor(점수1),MeanTemp)) +
geom_boxplot(aes(fill=factor(점수1)))
ggplot(korean,aes(factor(점수1),집중)) +
geom_boxplot(aes(fill=factor(점수1)))
head(korean)
ggplot(korean,aes(factor(이),집중)) +
geom_boxplot(aes(fill=factor(점수1)))
ggplot(korean,aes(factor(이름),집중)) +
geom_boxplot(aes(fill=factor(점수1)))
ggplot(korean,aes(factor(이름),집중)) +
geom_boxplot(aes(fill=factor(점수1))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(korean,aes(factor(이름),집중)) +
geom_boxplot(aes(fill=factor(korean))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(korean,aes(factor(이름),집중)) +
geom_boxplot(aes(fill=factor(korean[2:5]))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(korean,aes(factor(이름),집중)) +
geom_boxplot(aes(fill=factor(점수1))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
korean <- data.frame(
x <- round(rnorm(30),2)
,y <- round(rnorm(30),2)
,var1 <- abs(round(rnorm(30),2))
,var2 <- abs(round(rnorm(30),2))
,var3 <- round(runif(30),2)
,var4 <- round(runif(30),2)
,var5 <- round(runif(30),2)
)
# axis.text.x 테스트
p <- ggplot(korean,aes(x=이름,y=점수1)) + geom_point( )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
# axis.text.x 테스트
p <- ggplot(korean,aes(x=x,y=var1)) + geom_point( )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
p
ggplot(korean,aes(factor(x),집중)) +
geom_boxplot(aes(fill=factor(var1))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(korean,aes(factor(x),var5)) +
geom_boxplot(aes(fill=factor(var1))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
example(geom_boxplot)
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
example(geom_boxplot)
ggplot(diamonds, aes(carat, price)) +
geom_boxplot()
ggplot(diamonds, aes(carat, price)) +
geom_boxplot()
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
p + geom_boxplot(aes(colour = drv))
ggplot(diamonds, aes(carat, price)) +
geom_boxplot()
p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
# box plot
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
# axis.text.x 테스트
p <- ggplot(korean,aes(x=x,y=var1)) + geom_point( )+ theme(axis.text.x = element_text(angle = 45, hjust = 1))
# box plot
p <- ggplot(mpg, aes(class, hwy))
p + geom_boxplot(outlier.colour = "red", outlier.shape = 1)
p + geom_boxplot(aes(colour = drv))
par(mfrow=c(2,3))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
x <- round(rnorm(30),2)
y <- round(rnorm(30),2)
var1 <- abs(round(rnorm(30),2))
var2 <- abs(round(rnorm(30),2))
var3 <- round(runif(30),2)
var4 <- round(runif(30),2)
var5 <- round(runif(30),2)
x #30개
par(mfrow=c(2,3))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
par(mfrow=c(2,3), mar= c(8,6,3,1))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 정사각형")
symbols(x,y,rectangles=cbind(abs(x),abs(y)),inches=0.2,bg=1:30)
title(main="symbols 함수 - 직사각형")
symbols(x,y,stars=cbind(abs(x),abs(y),var1,var2,var3),inches=0.2,bg=1:30)
title(main="symbols 함수 - 스타형")
symbols(x,y,thermometers=cbind(abs(x),abs(y),var4),inches=0.2,bg=1:30)
title(main="symbols 함수 - thermometer형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.2,bg=1:30)
title(main="symbols 함수 - boxplot형")
par(mfrow=c(2,3), mar= c(30,20,10,2))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 정사각형")
par(mfrow=c(2,3), mar= c(20,10,5,1))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 정사각형")
symbols(x,y,rectangles=cbind(abs(x),abs(y)),inches=0.2,bg=1:30)
title(main="symbols 함수 - 직사각형")
symbols(x,y,stars=cbind(abs(x),abs(y),var1,var2,var3),inches=0.2,bg=1:30)
title(main="symbols 함수 - 스타형")
symbols(x,y,thermometers=cbind(abs(x),abs(y),var4),inches=0.2,bg=1:30)
title(main="symbols 함수 - thermometer형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.2,bg=1:30)
title(main="symbols 함수 - boxplot형")
par(mfrow=c(2,3), mar= c(20,1,15,1))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 정사각형")
symbols(x,y,rectangles=cbind(abs(x),abs(y)),inches=0.2,bg=1:30)
title(main="symbols 함수 - 직사각형")
symbols(x,y,stars=cbind(abs(x),abs(y),var1,var2,var3),inches=0.2,bg=1:30)
par(mfrow=c(2,3), mar= c(20,1,15,1))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
par(mfrow=c(2,3), mar= c(20,1,5,1))
symbols(x,y,circles=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 원")
symbols(x,y,squares=abs(x), inches=0.2,bg=1:30)
title(main="symbols 함수 - 정사각형")
symbols(x,y,rectangles=cbind(abs(x),abs(y)),inches=0.2,bg=1:30)
title(main="symbols 함수 - 직사각형")
symbols(x,y,stars=cbind(abs(x),abs(y),var1,var2,var3),inches=0.2,bg=1:30)
title(main="symbols 함수 - 스타형")
symbols(x,y,thermometers=cbind(abs(x),abs(y),var4),inches=0.2,bg=1:30)
title(main="symbols 함수 - thermometer형")
symbols(x,y,boxplots=cbind(abs(x),abs(y),var3,var4,var5),inches=0.2,bg=1:30)
title(main="symbols 함수 - boxplot형")
example(par)
par(mar = rep(.5,4))
example(par)
example(par)
c(1,2,3), c(4,5,6)
)
a1 <- read.csv("data2nd/seoul_hospital.csv",stringsAsFactors = F)
a1
b1<-a1[,2]
b2<-a1[2]
b1<-a1[,2]; b1
b2<-a1[2]; b2
type(b1)
typeof(b1)
typeof(b2)
