local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
q()
q()
?stem
seq(0,20,4)
seq(0,20,4)
c(seq(0,20,4))
data.frame(seq(0,20,4), c(rep(c(5,35),3),5)
data.frame(seq(0,20,4), c(rep(c(5,35),3),5))
c(rep(c(5,35),3),5)
typeof(matrix)
is.double(matrix)
is.object(matrix)
is.closure(matrix)
args(data.frame)
th <- seq(0,20,4)
tm <- c(rep(c(5,35),3),5)
data.frame(th, tm)
data.frame(th, rep((tm5,tm35),2)
data.frame(th, rep((tm5,tm35),2))
data.frame(th, tm5,tm35,tm5,tm35,tm5,tm35,tm5)
th <- seq(0,20,4)
th <- seq(0,20,4)
tm5 <- rep(5,6)
tm35 <- rep(35,6)
data.frame(th, tm5,tm35,tm5,tm35,tm5,tm35,tm5)
#matrix. 행(0,4,...,20), 열(5,35,5,35,5,35,5)
?stem
example(stems)
example(stem)
th <- seq(0,20,4)
tm5 <- rep(5,6)
tm35 <- rep(35,6)
tbo <- data.frame(th, tm5,tm35,tm5,tm35,tm5,tm35,tm5)
stem(tbo)
stem(tbo)
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector <- c(A_vector+ B_vector)
# Print out total_vector
total_vector
total_vector2 <- A_vector+ B_vector
A_vector <- c(1, 2, 3)
B_vector <- c(4, 5, 6)
# Take the sum of A_vector and B_vector
total_vector1 <- c(A_vector+ B_vector)
total_vector2 <- A_vector+ B_vector
# Print out total_vector
total_vector1
total_vector2
total_vector3 <- c(A_vector, B_vector)
total_vector1
total_vector2
total_vector3
poker_vector <- c(140, -50, 20, -120, 240)
roulette_vector <- c(-24, -50, 100, -350, 10)
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
# Assign to total_daily how much you won/lost on each day
total_daily <- poker_vector[days_vector]+ roulette_vector[days_vector]
total_daily
days_vector
poker_vector <- c(140, -50, 20, -120, 240)
roulette_vector <- c(-24, -50, 100, -350, 10)
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
total_poker <- sum(poker_vector[days_vector])
total_roulette <- sum(roulette_vector[days_vector])
sum(total_poker, total_roulette)
poker_vector <- c(140, -50, 20, -120, 240)
roulette_vector <- c(-24, -50, 100, -350, 10)
days_vector <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
names(poker_vector) <- days_vector
names(roulette_vector) <- days_vector
poker_wednesday <- poker_vector["Wednesday"]
poker_wednesday
poker_wednesday <- poker_vector[["Wednesday"]]
poker_wednesday
poker_wednesday2 <- poker_vector[["Wednesday"]]
poker_wednesday
poker_wednesday2
poker_wednesday <- poker_vector["Wednesday"]
poker_wednesday2 <- poker_vector[["Wednesday"]]
poker_wednesday
poker_wednesday2
text_jb51_homepage <- readLines("crime_ansi.txt")
setwd("D:/github/dataAnal_R_basic/data")
#english - tm
install.packages("KoNLP") #extractNoun. 설치할렴 jdk필요
install.packages("RColorBrewer") #brewer.pal
install.packages("wordcloud") #wordcloud
library(KoNLP)
library(RColorBrewer)
library(wordcloud)
text_jb51_homepage <- readLines("crime_ansi.txt")
txtjb2 <- sapply(text_jb51_homepage, extractNoun, USE.NAMES=F)
txtjb3 <- unlist(txtjb2)
head(txtjb3,10)
# gsub
txt <- readLines("w_gsub.txt")
txt[5]
cnt_txt <- length(txt)
for(i in 1:cnt_txt){
txtjb3 <- gsub((txt[i]),"",txtjb3)
}
txtjb3 <- Filter(function(x) {
nchar(x)>=2
}, txtjb3)
# save- I need
write(unlist(txtjb3),"jb15.net_homepage_text.txt")
# wordcloud- for viewing
data4 <- read.table("jb15.net_homepage_text.txt")
wordcount <- table(data4)
#정렬 후 20개만
head(sort(wordcount, decreasing=T), 20)
palete <- brewer.pal(8,"Set2")
wordcloud(names(wordcount), freq= wordcount, scale=c(5,1)
,rot.per=0, min.freq=1, random.order=F
,random.color=T, colors=palete)
# ??brewer.pal
# ??wordcloud
# RSiteSearch(wordcloud)
